{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nlet HomeComponent = class HomeComponent {\n  constructor(scroller, emailService, _snackBar, EmailStats, cd, updates) {\n    this.scroller = scroller;\n    this.emailService = emailService;\n    this._snackBar = _snackBar;\n    this.EmailStats = EmailStats;\n    this.cd = cd;\n    this.updates = updates;\n    this.showSend = true;\n    this.isloading = false;\n    this.hits = 0;\n    this.totalEmails = 0;\n    this.totalEmailvalue = 0;\n    this.totalEmailsSent = 0;\n    this.currentSection = 'section1';\n  }\n\n  ngOnInit() {\n    if (this.scroller.getScrollPosition()[1] > 0) {\n      this.scroller.scrollToAnchor('about');\n    }\n\n    AOS.init();\n    this.emailForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      subject: new FormControl(''),\n      message: new FormControl('', [Validators.required, Validators.minLength(3)])\n    });\n    this.getStatsApi();\n    this.updates.available.subscribe(event => {\n      alert('New Update available, Please Reload the page');\n    });\n  }\n\n  onSectionChange(sectionId) {\n    this.currentSection = sectionId;\n  }\n\n  scrollTo(section) {\n    document.querySelector('#' + section).scrollIntoView();\n  }\n\n  onSubmit() {\n    this.showSend = false;\n    this.isloading = true;\n    this.emailService.sendEmail(this.emailForm.value).subscribe(res => {\n      this.openSnacBarSuccess();\n      this.showSend = true;\n      this.removeValues();\n      this.isloading = false;\n      this.getStatsApi();\n    }, error => {\n      this.openSnacBarFail();\n      this.showSend = true;\n      this.isloading = false;\n    });\n  }\n\n  openSnacBarSuccess() {\n    this._snackBar.open('Email Sent Successfully by', `${this.emailForm.value.name}`, {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'top'\n    });\n  }\n\n  openSnacBarFail() {\n    this._snackBar.open('Some Error Occured', 'Close', {\n      duration: 3000,\n      horizontalPosition: 'center',\n      verticalPosition: 'top'\n    });\n  }\n\n  getStatsApi() {\n    this.emailService.getStats().subscribe(stats => {\n      let a = JSON.stringify(stats);\n      this.EmailStats = JSON.parse(a);\n      this.hits = this.EmailStats.hits;\n      this.totalEmails = this.EmailStats.totalEmails;\n      this.totalEmailvalue = this.EmailStats.totalEmails / this.EmailStats.hits * 100;\n      this.totalEmailsSent = this.EmailStats.hits / (this.EmailStats.totalEmails * 10) * 100;\n      this.cd.markForCheck();\n    });\n  }\n\n  removeValues() {\n    this.emailForm.reset();\n  }\n\n  get name() {\n    return this.emailForm.get('name');\n  }\n\n  get email() {\n    return this.emailForm.get('email');\n  }\n\n  get subject() {\n    return this.emailForm.get('subject');\n  }\n\n  get message() {\n    return this.emailForm.get('message');\n  }\n\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css', './home.style.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], HomeComponent);\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module"}